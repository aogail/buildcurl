#!/bin/bash

contains_element() {
	local e
	for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
	return 1
}
contains_string() {
	[ "${2/$1//}" != "$2" ]
}

DOCKER_ORG=${DOCKER_ORG:=buildcurl}
SOURCE=${SOURCE:="/opt/buildcurl"}
ALLOWED_TARGETS="$(cat $SOURCE/data/targets)"
TARGET="$1"
RECIPE="$2"

if ! contains_string "$TARGET" "${ALLOWED_TARGETS[@]}" ; then
	echo "Unknown target: '${TARGET}'. Aborting"
	exit 2
fi

if [ -z "$RECIPE" ]; then
	echo "No recipe given. Aborting"
	exit 2
fi

if ! test -f $SOURCE/recipes/$RECIPE ; then
	echo "Unknown recipe: '$RECIPE'. Aborting"
	exit 2
fi

if [ -z "$PREFIX" ]; then
	PREFIX=/usr/local
fi

MAX_CPUS=$(getconf _NPROCESSORS_ONLN)

tar czf - $SOURCE -P --exclude ./cache | docker run --rm -i -a stdin -a stdout -a stderr \
	-e JOBS="${JOBS:=$MAX_CPUS}" \
	-e PREFIX="$PREFIX" \
	-e LOGGER="$LOGGER" \
       	-e SOURCE=/opt/buildcurl \
	-e VERSION="$VERSION" \
	-e BUILDCURL_URL="$BUILDCURL_URL" \
	-e NOCACHE="$NOCACHE" \
	-w /scratch \
	"$DOCKER_ORG/$TARGET" \
	bash -c "tar xzf - -P && $SOURCE/bin/compile \"$RECIPE\""
